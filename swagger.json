{
  "openapi": "3.0.0",
  "info": {
    "version": "v1.0.0",
    "title": "connect",
    "description": "A social media REST api providing access to resources such as users, posts, followers, comments, likes and chat",
    "contact": {
      "name": "@creator",
      "email": "awesomeme155@gmail.com"
    }
  },
  "servers": [
    {
      "url": "https://connect-rest-api.herokuapp.com",
      "description": "Deployed Heroku Server"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "components": {
    "schemas": {
      "user": {
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Access token is missing or invalid"
      }
    }
  },
  "definations": {
    "user": {
      "type": "object",
      "required": "true",
      "properties": {
        "name": "string",
        "email": "string",
        "password": "string"
      }
    }
  },
  "paths": {
    "/connect/v1/signin": {
      "post": {
        "tags": ["signin"],
        "summary": "user signin",
        "responses": {
          "200": {
            "description": "success. returns a user object along with the generated auth token"
          },
          "401": {
            "description": "User not found. user with the specified email does not exist or password mis-match!"
          }
        }
      }
    },
    "/connect/v1/signout": {
      "get": {
        "tags": ["signout"],
        "summary": "user signout",
        "responses": {
          "200": {
            "description": "success. deletes a user cookie from the response object in case the client uses cookies"
          }
        }
      }
    },
    "/connect/v1/users": {
      "post": {
        "tags": [
          "Create"
        ],
        "summary": "Create a new User account",
        "requestBody": {
          "description": "User model fields",
          "required": "true",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/user"
              },
              "example": {
                "name": "test-user",
                "email": "testuser@gmail.com",
                "password": "test#useR19paSSword"
              }
            }
          },
          "schema": {
            "$ref": "#/components/schemas/user"
          }
        },
        "responses": {
          "201": {
            "description": "Account creation successfull",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "400": {
            "description": "Bad request. user model fields error or duplicates error!"
          },
          "401": {
            "description": "UnAithorized. user authentication and authorization error!"
          },
          "404": {
            "description": "User not found. user with the specified id does not exist!"
          }
        }
      },
      "get": {
        "tags": ["Read"],
        "summary": "List all users",
        "security": {
          "bearerAuth": []
        },
        "responses": {
          "200": {
            "description": "success. returns a list of all users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                } 
              }
            }
          },
          "400": {
            "description": "Error"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/connect/v1/users/{id}": {
      "get": {
        "tags": ["Read by Id"],
        "summary": "fetch a user by id",
        "security": {
          "bearerAuth": []
        },
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "user id used to locate the matching user object",
          "required" : true,
          "type" : "integer"
        } ],
        "responses": {
          "200": {
            "description": "success. returns a user matching the provided id"
          },
          "404": {
            "description": "User not found. user with the specified id does not exist!"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "put": {
        "tags": ["update"],
        "summary": "update user data by id",
        "security": {
          "bearerAuth": []
        },
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "user id used to locate the matching user object",
          "required" : true,
          "type" : "integer"
        } ],
        "responses": {
          "200": {
            "description": "success. returns an updated user matching the provided id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/user"
                }
              }
            }
          },
          "404": {
            "description": "User not found. user with the specified id does not exist!"
          },
          "400": {
            "description": "Bad request. user model fields error or duplicates error!"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      },
      "delete": {
        "tags": ["delete"],
        "summary": "delete user data by id",
        "security": {
          "bearerAuth": []
        },
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "user id used to locate the matching user object",
          "required" : true,
          "type" : "integer"
        } ],
        "responses": {
          "200": {
            "description": "OK. return the delete count"
          },
          "404": {
            "description": "User not found. user with the specified id does not exist!"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    }
  }
}
